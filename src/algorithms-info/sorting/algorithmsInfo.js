const info = [
    {
        key: 'BUBBLE_SORT',
        name: 'Пузырьковая сортировка',
        description: 'Сортировка пузырьком — один из самых известных алгоритмов сортировки. Здесь нужно последовательно сравнивать значения соседних элементов и менять числа местами, если предыдущее оказывается больше последующего. Таким образом элементы с большими значениями оказываются в конце списка, а с меньшими остаются в начале. Этот алгоритм считается учебным и почти не применяется на практике из-за низкой эффективности: он медленно работает на тестах, в которых маленькие элементы (их называют «черепахами») стоят в конце массива. Однако на нём основаны многие другие методы, например, шейкерная сортировка и сортировка расчёской.',
        time: 'O(n²)',
        space: 'O(1)'
    },
    {
        key: 'SELECTION_SORT',
        name: 'Сортировка выбором',
        description: 'Возможно, самый простой в реализации алгоритм сортировки. Как и в большинстве других подобных алгоритмов, в его основе лежит операция сравнения. Сравнивая каждый элемент с каждым, и в случае необходимости производя обмен, метод приводит последовательность к необходимому упорядоченному виду. 1) берем первый элемент последовательности A[i], здесь i – номер элемента, для первого i равен 1; 2) находим минимальный (максимальный) элемент последовательности и запоминаем его номер в переменную key; 3) если номер первого элемента и номер найденного элемента не совпадают, т. е. если key≠1, тогда два этих элемента обмениваются значениями, иначе никаких манипуляций не происходит; 4) увеличиваем i на 1 и продолжаем сортировку оставшейся части массива, а именно с элемента с номером 2 по N, так как элемент A[1] уже занимает свою позицию;',
        time: 'O(n²)',
        space: 'O(1)'
    },
    {
        key: 'QUICK_SORT',
        name: 'Быстрая сортировка',
        description: 'Быстрая сортировка (англ. quicksort) – это метод сортировки значений в списке в последовательные списки с помощью повторяющейся процедуры. В методе быстрой сортировки выбирается значение из основного списка, которое называется опорным значением. Остальные значения разделяются на два списка: Первый список содержит значения, которые меньше либо равны опорному значению. Эти значения располагаются слева от опорного значения. Второй список содержит значения, которые больше опорного значения. Эти значения располагаются справа от опорного значения. Метод быстрой сортировки повторяется для всех результирующих списков, пока не останется только одно значение или пустой список значений. После этого вы выбираете последнее одиночное значение, и если значение располагается слева от опорного значения, оно остается таким, пока вы не дойдете до первого опорного значения вверху.',
        time: 'O(n log n)',
        space: 'O(n log n)'
    }
]

export default info;